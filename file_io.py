# MIT License
#
# Copyright (c) 2019 Robert GÃ¼tzkow
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

import sys
import importlib.util
from unittest import mock
from typing import List


def save_file(content: List[str], file_path):
    """
    Saves content as file. Overwrites existing file, if it exists.
    :param content: List of strings to be written into the file
    :param file_path: Path, including filename, where file should be saved
    """
    with open(file_path, 'w') as outfile:
        outfile.writelines(content)


def load_viscm_colormap(file_path):
    """
    Load the colormap from a python script generated by viscm. Since importing the colormap from the script triggers
    the imports within the script, this would normally require matplotlib to be installed. Since this tool is not
    supposed to have third-party dependencies and matplotlib isn't required for the tasks that have to be performed,
    the solution is to mock matplotlib.colors.
    :param file_path: Path to the viscm generated python script that contains the colormap
    :return:
    """
    sys.modules['matplotlib.colors'] = mock.MagicMock()
    spec = importlib.util.spec_from_file_location("viscm", file_path)
    viscm = importlib.util.module_from_spec(spec)
    spec.loader.exec_module(viscm)

    return viscm.cm_data
